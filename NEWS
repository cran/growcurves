Version 0.2.3.8
-------------------------------------------------------------------------

FEATURES

* updated release on CRAN.

* performs Bayesian mixed effects modeling on repeated measures data.

* allows a DP prior on a set of subject random effects to borrow strength across subjects for estimation.

* simultaneously supports definition of random effects under other than subject groupings with one or more multiple membership (MM) terms.

* the dpgrow function performs mixed effects modeling without an MM term (but with a DP prior on the set of subject random effects).

* the dpgrowmm function extends dpgrow by allowing for a single MM term under one of three prior formulation options = c("mmi","mmigrp","mmcar").

* the dpgrowmult function extends dpgrowmm by allowing for any number of MM terms, each under one of four prior formulation options = c("mmi","mmigrp","mmcar","mmdp").

* a new ddpgrow function extends dpgrowmm and dpgrowmult by absorbing the MM term inside the subject effects such that each subject parameters their own MM effects.  
	-- prior formulation options = c("car","mvn","ind").

* there are also 3 accompanying graphical accessor functions for the 3 sampling functions to promote easy analysis:

* the growplot function produces and plots by-subject growth curves under any user defined grouping.

* the trtplot function compares the distribution for the difference in fixed effects means between any two treatment arms.

* the effectsplot function compares the mean effect values for an MM term under different prior and model formulations.


CHANGES

10/10/2012
-----------
* Fixed errors in effectsplot and ddpEffectsplot functions that render MM random effects plots when user elects option to order by effect size within each plot cell.

11/07/2012
-----------
* Added additional return object, phat, the n x n matrix of pairwise clustering probabilities obtained from sampled clusters.  This object may be employed in a deterministic
* clustering scheme as an alternative to using the optimal clustering, BigSmin, returned from the least squares clustering algorithm of Dahl (2006).

12/06/2012
----------
* updated all multivariate normal sampling functions to avoid inverse computation of precision matrix. Now directly draws samples from cholesky
decomposition of precision matrix.
* updated multiple membership (MM) .cpp models for more efficient posterior sampling of MM random effects
* fixed an error that inadvertantly sorted subj.aff (post numerical re-labeling for internal use) such that the labels no longer corresponded with the rows of W.subj.aff

12/11/2012
----------
* updated all engine functions to pre-compute quadratic products of data matrices and their slices for more efficient computation.

1/24/2013
----------
* fixed an error when checking user input under function dpgrowmult that accounts for the user not selecting option "mmcar" for any groups.
* fixed error in checking for duplicate columns between Z.n and Z.c for generation of random effects design matrix, Z.
* fixed an error to reorder "time" variable to be consistent with contiguous by-subject order for growth curve plotting.

3/15/2013
----------
* fixed an error in ddp.cpp to eliminate use of pow(&int,int), which is not allowed.

3/25/2013
---------
* fixed an error in ddp_quantiles.R to select the correct index when computing the mean covariance matrix, P_mvn[[countmvn]], (for each treatment under "mvn")
* fixed an error in dpgrowmm under "multi=TRUE" to create "omega.plus" matrix from Omega
* fixed an error in dpgrowmm under option "multi=TRUE" and "option = "mmcar" for computation of the posterior mean of conditionally sampled nv x 1 session effects
* fixed a potential error in dpgrowmm where W.subj is set equal to W.subj.aff under all subjects receiving treatment.  Coerced W.subj to matrix in the case the user
* inputs W.subj.aff as a data.frame object.   W.subj is subsequently used in growthCurves function to differentiate a dpgrowmm object (matrix) from a dpgrowmult object (list).

1/07/2014
---------
* change deprecated method to pull elements of a vector for Armadillo 4.000
* and the companion RcppArmadillo 0.4.000.
* in particular, update method of pulling scalar views of vectors to no longer use 
* ".row" or ".column", which are now constrained to return matrix objects, not scalars
* Instead of creating a subview like so:
*    ustarj = ustar.row(s(j));
* use this:
*     ustarj = ustar(s(j));

2/19/2014
---------
* Updated references, in particular for the upcoming paper in Journal of Statistical Software.

